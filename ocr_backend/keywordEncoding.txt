 Alright can I have your attention please all right so Today we're going to look at prims algorithm it's not going to be on the exam but I think it's important to to look at okay so and then we'll do Hey I'll do a demonstration of a problem that's maybe you know kinda I have a proof type problem of the greedy algorithm I kind of ran out of time last class to do it so well I'll try to I'll try to give more time so that we can get through the whole thing all right so First let's I want to go through Cruise goes out Algorithm like an example that uses the union the union find thing okay Remember the first thing that kruskal's algorithm does is it It sorts the edges by way you do that somehow Sorting algorithm then you put every vertex and its own set by itself Got the should be BFG Okay and then you go one by one through each Edge and See if you can connect these disjoint sets together so the 1st Bashas ad and so you connect a 02 d And you change the rank of D21 because a zero and D Easier have the same rank so you increment the okay Iggy do the same thing So that's good ABC you do the same thing here I guess I need to change G2 P1 Oh I should I should keep track of which edges on keeping ad G-Eazy Okay then the next one is DG so what happens here Fuji app We we have B&G have the same Rank and they're the both the route so you point d to g And your increment the rank of G That good for now be So what happened to you You find that the root of ESG and the root of B is see right so you connect C2 The notice here that like the edges that are that I'm putting out in my output are not the same edges Is that are in my my disjoint sets tree this is just kind of the keep track it's just the date Struxureware using So it's important to To keep track of what edges you are using in your In your process okay so then AC is Nothing right. Doesn't that doesn't do anything because the root of a is G and the root of C is G Alright de Thunder's roster Ride also nothing TF what happens Define the root of a witch's G and you find the root of f which is f Soul has a smaller rank Reconnect after G And then GF nothing CF nothing Okay so then the algorithm is done and noticed that we have 7 vertices Need to start with and we have our output is 6 vertices ranked so this necessarily a tree And we can just draw on the graph Ad Fiji BC DG Be India Are there any questions So let's talk about what prim's algorithm is It's it's it's also an algorithm to find the minimum spanning tree and it's also a greedy algorithm Okay so The greedy strategy is different than the one from crew skulls so we've seen some exam Apple's where certain greedy strategies won't work right In this case the green strategy for Chris goes to work and the greatest strategy for primitive work So what's the greedy strategy for prims So you be going to any vertex Can you take the next lightest Edge that comes out of that for a text Once you do that then you have a connected You have two vertices that are connected and you repeatedly take the next vertech but Next lightest Edge that comes off of that connected component The think about prims algorithm as your first Vertex is like the seed and every time you go through you're adding one more Branch to the tree Right at the Loop invariant for prim's algorithm is that Acts like the set that your building is always a connected tree And The rest of the vertices are just isolated vertices So we're going to see let's see this in action is this going to work What kind of going to Demonstrate the correctness of this algorithm with an example okay so let's let's see what How prim's algorithm works and let's use the cut property so that we can I guarantee that every Every age that we had into it will get us closer and closer to a minimum spanning tree Okay so we can start from any vertex which vertex should we start from Okay let's get a cell is like are connected tree right now and the rest of the vertices These are isolated point I guess they're all isolated points but Is distinguished so we're going to make the cut based on so the first cut we make it Best So what's the next lightest Edge that crosses over that cut EB Wright Okay good So now we have a connected part and isolated vertices parts so this is how the algorithm is going to go And the next cut we make is going to be These guys With these guys So now what the next light aside your cross this cut Be Daddy right So we got that one Can we do this again So you can see that Prim's algorithm It's always clear exactly what cut you're making right so you make the cut then you find the edge that's That's the biggest difference I think is the difference between prim's and kruskal kruskal's algorithm is you First find the eggs that's the lightest then you make the cut based on that edge or as prims is fur First you make the cut then you find the edge so that kind of do those two steps in opposite order Okay so what's the next lightest edge here Dh9 Can you get that one Hi and then now we have to make like kind of a weird cut here Best Buy So What are the ages that are crossing this cut what's the lightest one I guess there are two right after dnf 2H so let's take f.2d How to D And now we have to make another cut Okay this one's going to be really weird And then Alright so I take I'm going to go around this way So what's the lightest Edge across this cut CDF right one I know this is going to be bad Is it going to be hard okay so here's the first one Okay so we have to get her to come in here and Anna like loop around me And then get these guys So you don't have to you don't have to go between f&h cuz remember the cut is a Is a separation of vertices And so that edge between f&h that's like entirely within one of the cut one of the sets Doesn't crossover what we're interested in it or only the edges that cross over from one set to another Okay so what do we have here One of those three ages right so let's Yes it does it doesn't really matter which one you take right Thursday both connect to the set and they both wait three so Was going to work Can't answer that now now we okay now I can take a breath here and just draw I like big circles Taxidermy have these ones And there's three edges 8 9 and 11 so we take DG And then here's the final step is We have all of these guys and I And we take two That and then there's our minimum spanning tree okay so I'm hoping that that demonstration kind of gives you a The science of why this works based on what we know from The Cut Property So what is the cut property is this song Remember it's a subset of a minimum spanning tree and you make some short answer Sort of partition that partitions that subsets into 2 disconnected graph And then if you add the lightest Edge that crosses it then it will still be part of them in Spanish So I just got it in a very formulaic way Okay so um On the set Oh yeah this is what I want to say Okay The Cut Property Notice that this was the way that we proved crew skulls and prims and in in innocence The Cut Property will prove that any algorithm that follows the same logic as Keep on adding an edge that's a minimum Edge across a cut Then that will always work that will always provide you with an MSD so What do I want to say here is that Can I go back to this thing I want to go back to this one okay So what I want to say here is that you can just randomly make cuts and then keep on putting keep on Adding the lightest Edge and that will provide you with a minimum spanning tree only thing is is that is very hard Implement Factually randomly make the cut so that's where prim's and kruskal come in if they make it so that there's Is always a formulaic way of building those cuts Arkansas Let's look at This Kind of in like a more general term Salty the dotted edges are the edges of your graph The solid edges will be the edges of X the edges of your Partial minimum spanning tree So I noticed that in one of your sets It's all connected and the other said they're none of them are connected Now What we're going to do here is Pick the lightest Edge that's crossing over that cut and the way we're going to do it is we're going to transfer That that information about The Edge from The Edge to the actual vertex peso Let's suppose that These are like some edges that cross the cut Right and they have weights 5 Three 4 So what we're going to do is is we're going to assign a value to each vertex in the set be mine Just want to be my side And that value is going to be the weight the minimum weight of an edge that connects that vert Text to the other side So this protects we going to have a cost of 5 and cost of 3 and this one Hear that has two edges coming in so you take the minimum 1/2 And this one over here is going to have a value of infinity because There is no The cost to to add that edge is unbounded very we haven't found it yet Okay so this is what we Define cost as So notice what we're doing here is we're going to repeatedly add inverted That have the minimum cost at each point and every time you added a Vertex to your graph You may need to update all the other vertices right because once you added supposed to be added in This Vertex and then we have this new set Frank then we have to update along all of these These edges CF And you may change the five to something smaller you may change the three and you certainly are going to Give a value to the infinity Okay so this is reminiscent of another album Then we saw which is dijkstra's algorithm It's almost the exact same thing It's it's instead of using disk We're going to use coffee And the only difference here is that distance V remember is like a cumulative Distance to every time you update a new vertex you're updating it to the cumulative To blank from the starting vertex keep on adding Or as cock is really only like the actual weight of the edge that connects it to crap So here's prim's algorithm it should look very similar to dijkstra Really the only change Is this Part here And let me just kind of right out what I should be yours would be something like this If the distance Tizzy Is Greater than or equal to The I guess you can say just greater than Is greater than the distance 2v plus the length of ZZ Then Distance Z is equal to distance The bus Minecraft PC I thought you see kind of house This one you have to You have to add in like the distance it took to the other to the parent Okay see you guys I'll see the difference Fight So what's going to be the runtime of prims algorithm The same as dykstras you're replacing this Constant time Assignment and condition to another constant time condition and assignment Famous Dykstra in so remember what dykstra's was was the runtime with an array V squared and the runtime with a binary Heap is The lobby And then also recall that the runtime of krouskos is also a log me so NFC These algorithms prim's and kruskal have very similar run times But Is there any scenario where One would be better than the other So which one Rims with a sparse graph is better Sparse meaning that he is around big RV Help Rams with the with the array Is always going to be v-squared But in a dense graph if you have a Is Big O of B squared Then this thing becomes B squared login It's the same kind of idea with textures Alright so I want to start on this example but I want you guys to finish this up at As an exercise What we're going to do is Just run through a few of steps of this And kind of show why this priority queue method is the same thing as What we did before with the okay so it started a different vertex this What are you guys say So that means I'm going to set F20 and all of these guys to Infinity And I have like you over here ABCD Tasty take out at night And we update along all of the Edge's incident with app So this one this one So we get to see is one from f He is 3 from f Heidi is 6 from f NHS sex from app So you can kind of see Those updates right those are taking place as all of the edges That crossover the cut You guys can like imagine the cut that has F and one zone and everything else in the other Zone Go to the only I just that we're worried about so then we take the minimum one which is just like deleting men in the queue Which is going to be C Tecate And let's Add that to our Green grass Okay and now see you update along All the outgoing edges of sea Now If you imagine what the cut is it still crossing over those outgoing edges of a butt Those values your keeping in memory so you don't have to change them The only ones you have to change other ones coming out of sea and so we change 81212 Out from sea We change V2 Nine from CN I guess we can just leave it so this is from Free from app And Six from app Thanks for the next one you pick Izzy And you are You add it into your graph And then you update along All the outgoing edges of me Are there any questions here Who is the exercise for you guys to complete I see a kind of how it works in action Okay So the next thing I want to do is go over this example I kind of I started I didn't have time to kind of go through the whole thing with the other class so but we have a little bit more time than they did So we will start with it then everybody do the homework Or at least look at it okay so One of the problems had to do with like this pulling a plow right I didn't ask you to prove the correctness of it But what we're going to do today as I'm going to prevent part of that crew now thing to keep in mind Is on the exam I'm going to ask you to prove part of a proof of a grease trap Strategy and the part of the proof I want you to prove is the modify the solution part so I'm going to prevent A way to modify a solution that doesn't pick the greedy choice to a solution that does pick Pick the greedy choice and I want you to prove that The new solution is just as good as the hold solution So that's what we're going to attempt to do today with the oxen and hopefully that will give you a sense of Of what type of problem we're going to we're going to see on the midterm or the Exam 2 Quiz 2 what are you guys like better quiz Does it take the pressure off a little bit now What about midterm that's just the worst right midterm exam and quiz What about like in class exercises Alright so let's so I'm going to write down the problem so You have these oxen And let's say they're ordered by Strength Increasing And you have their strengths Strength Dachshund And you have P Is the minimum Strength Needed To pull a plow And what you want to do is find A way To team up Two oxen Reply To maximize The number Of teams I guess Formality or strong tea or plow plow teams Okay so remember I gave you two greedy choices right does anybody remember what the correct Choice was Repair the strongest with the weakest And then what If they If they can't pull the plow then throw away the weakest and if they can compare them up And repeat so there's going to be two cases Case one is that S1 plus SN is less than P so this is kind of like the easy case This is not the type of modify the solution argument that I'm going to ask but if you like we can kind of Quickly go through why it's okay to assume this case so What is FS1 plus SN is less than P what does that mean about the week is cow weakest Is an ox a cow No What's the difference is the ox the one that has that big hump here You don't talking about like that or do they have like a big lie It's the horns that's a difference but don't care Cows have horns If the male cow I guess it depends on Where are oxen from Europe I feel like an Asian baby was like yeah right is that Difference anyhow I might call them cow By by mistake okay but they're just all awesome okay so what does that mean About the weakest what is that mean about the weekends off here There's not yet there's nobody compared with right so you can throw it away and be safe so basically this in Why's that Ox1 Is useless Therefore Any Maximo Solution Two Box 1 through xn Is also A maximal Solution Two Fox23 Roxanne That's kind of like the very simple let's go to case 2 Case 2 is what Oxford S1 + S2 SN Is greater than or equal to pee right Okay so There are a few some cases here one of them is Case one Work now let's let's do this first okay suppose A prime is some valid Solution That Does not Hair S14 ox1 WIC office in This is like the general modify the solution strategy the goal here is to Goal Is to modify A prime to a Such that Pairs Ox one with oxen And A is valid Right A is greater than or equal to a friend Thanks. These are kind of like the three points So basically what I'm going to give you on the exam is I'm going to give you The way to modify the solution and you have to prove that the modified solution is valid And is just as good as the Rich and that's what we're going to do with this okay so there's two cases On this one case one case to a I guess A prime Doesn't care Fox One With Anybody Hey is going to be equal to a prime Oh well let's say this And it Pairs in Pears Ox And with XJ So how are we going to turn a Prime into a solution and that does pair off And with Ox one Say it again Okay and then replace it with Okay good so basically what we do is we throw away oxygen and put ox1 into this place So is equal to a prime Minus the set-up San Jose And Union it with One With oxide What do we get here A is equal to A prime -1 + 1 So Hey is equal to a prime And That's fine we don't have to show that it's actually better we just have to show that it just as good Heart song Case to be Is that a prime doesn't Hair And with Anybody And pears Ox1 with oxygen oxide I guess Sorry let's go back to this one real fast Before we move on is invalid solution Why Right we have this We have this assumption in the beginning to ox1 ox and is a valid pair and a prime we've already Assumed is a valid set so you just taking out a pair and putting in a pair That's what I want you guys to do as An exercise This one's very easy it's basically the same Argument from before So case To see This is going to be the case that's kind of more like what I'm going to ask you on the exam is like A prime pairs Fox one with ox-eye And Ox Jay with ox and And A is equal to a prime Minus Ox one with ox I Minus Oxen with Akshay Union Ox one with oxen Union Ox-eye with Ox J Okay so now Your goal is to prove that one to prove Fruit One A is valid N2 Is greater than equal to a Do the cases come from the the first thing that we're assuming and this is what you always do with the motto Defy the solution is assume That a prime or whatever you want to call it Is a valid solution that does not pick the greedy choice So not picking the greedy Choice means three things either you don't Text for thanks Either you don't care any of them you don't care Ox one with anybody or ox and with anybody You don't pair Ops one with anybody you don't pay Roxanne with anybody or you pair them with different things No the the case for case to to be I guess here let me just Write it out see you guys this will be a exercise for you guys too Case 2D is that a prime does not Pear Ox1 With Any Anyone And Does not pair Ox end With Anyone Answer this one's kind of like the very easy case how do you improve on this case Repair them in and you've definitely got a strictly better solution Okay so case to see is like the kind of the more complicated one Hey so how are we going to do this how do you show that is valid The ox one should be able to repair with ox and that's okay that's Already part of the Assumption That's one plus a sin is greater than equal to pee right this is the assumption So what else do you have to show SI + SJ Is greater than equal to p How do we show that So let's let's like gather some information that we know a prime Is valid What is that mean about those two pairings And then also what do we know about us one It's the lowest right So if F1 plus SJ Is greater than equal to p Msj is stronger than S1 then certainly as shapeless as I will be greater than What's write that out Best What is OnePlus S1 is less than Or equal to SJ Soe s1 Plus Best I Is Bumped it this way Is one plus X is greater than or equal to p and that's the last Center equal to SJ + SI That just shows that oxygen oxide are about a pair Want an ox and are always already about a pair and everything else in a prime is a valid pair there for a is a Valid solution And then the last part is just that Is equal to A prime -2 + 2 A is equal to a pint So this is like this is the This is the case that You should be kind of thing I mean is going to be for a different problem with different type of greedy problem Going to be this kind of flavor of Okay well we got to we got to do it now is anybody have any other questions That's because as one is the is the lowest By assumption Stop Is the lowest what is the lowest so you have that and then My plan green this This thing right here is directly from this Part of the Assumption For something that a pine is a valid solution So like to finish the proof you would do it induction but I think I think just learning how to do this proof this part is it good for For this class Is that right A mascot those ones just kind of smell weird Oh cool Okay so it like it's it's good that we use this word ox Baraga Induction No there's going to be no induction on the exam good question But there are some review sessions this weekend okay Directions to